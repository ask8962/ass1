import 'package:flutter/material.dart';

void main() => runApp(const FeedbackApp());

class FeedbackApp extends StatelessWidget {
  const FeedbackApp({super.key});

  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Flutter Feedback Form',
      debugShowCheckedModeBanner: false,
      theme: ThemeData(
        primarySwatch: Colors.blue,
        inputDecorationTheme: InputDecorationTheme(
          filled: true,
          fillColor: Colors.grey.shade100,
          border: OutlineInputBorder(
            borderRadius: BorderRadius.circular(10),
            borderSide: BorderSide.none,
          ),
        ),
      ),
      home: const FeedbackFormPage(),
    );
  }
}

class FeedbackFormPage extends StatefulWidget {
  const FeedbackFormPage({super.key});

  @override
  State<FeedbackFormPage> createState() => _FeedbackFormPageState();
}

class _FeedbackFormPageState extends State<FeedbackFormPage> {
  final _formKey = GlobalKey<FormState>();
  final TextEditingController _nameCtrl = TextEditingController();
  final TextEditingController _rollCtrl = TextEditingController();
  final TextEditingController _feedbackCtrl = TextEditingController();

  double _rating = 5;
  String? _selectedCategory;

  Map<String, bool> _features = {
    'Easy to Use': false,
    'Design': false,
    'Speed': false,
    'Support': false,
  };

  bool _agreeToTerms = false;

  void _submitForm() {
    if (!_agreeToTerms) {
      ScaffoldMessenger.of(context).showSnackBar(
        const SnackBar(content: Text('You must agree to the terms.')),
      );
      return;
    }

    if (_formKey.currentState!.validate()) {
      // Collect Data
      final name = _nameCtrl.text.trim();
      final roll = _rollCtrl.text.trim();
      final feedback = _feedbackCtrl.text.trim();
      final selectedFeatures = _features.entries
          .where((entry) => entry.value)
          .map((e) => e.key)
          .toList();

      print('Name: $name');
      print('Roll Number: $roll');
      print('Feedback: $feedback');
      print('Rating: $_rating');
      print('Category: $_selectedCategory');
      print('Liked Features: $selectedFeatures');
      print('Agreed to Terms: $_agreeToTerms');

      ScaffoldMessenger.of(context).showSnackBar(
        const SnackBar(content: Text('Feedback submitted successfully!')),
      );

      // Optionally: Clear form
      _formKey.currentState!.reset();
      _nameCtrl.clear();
      _rollCtrl.clear();
      _feedbackCtrl.clear();
      setState(() {
        _rating = 5;
        _selectedCategory = null;
        _agreeToTerms = false;
        _features.updateAll((key, value) => false);
      });
    }
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: const Text('Flutter Feedback Form'),
        centerTitle: true,
        leading: const Icon(Icons.arrow_back),
        elevation: 0,
      ),
      body: SingleChildScrollView(
        padding: const EdgeInsets.all(20),
        child: Form(
          key: _formKey,
          child: Column(
            crossAxisAlignment: CrossAxisAlignment.start,
            children: [
              // Name
              const Text("Name"),
              const SizedBox(height: 6),
              TextFormField(
                controller: _nameCtrl,
                decoration: const InputDecoration(
                  hintText: 'Enter your name',
                ),
                validator: (value) =>
                    value!.isEmpty ? 'Please enter your name' : null,
              ),
              const SizedBox(height: 16),

              // Roll Number
              const Text("Roll Number"),
              const SizedBox(height: 6),
              TextFormField(
                controller: _rollCtrl,
                decoration: const InputDecoration(
                  hintText: 'Enter your roll number',
                ),
                validator: (value) =>
                    value!.isEmpty ? 'Please enter your roll number' : null,
              ),
              const SizedBox(height: 16),

              // Feedback
              const Text("Enter your feedback..."),
              const SizedBox(height: 6),
              TextFormField(
                controller: _feedbackCtrl,
                maxLines: 4,
                decoration: const InputDecoration(
                  hintText: 'Your feedback here...',
                ),
              ),
              const SizedBox(height: 20),

              // Slider
              Row(
                mainAxisAlignment: MainAxisAlignment.spaceBetween,
                children: [
                  const Text("Rate your experience"),
                  Text(_rating.toInt().toString()),
                ],
              ),
              Slider(
                value: _rating,
                min: 1,
                max: 10,
                divisions: 9,
                label: _rating.toInt().toString(),
                onChanged: (value) {
                  setState(() {
                    _rating = value;
                  });
                },
              ),
              const SizedBox(height: 16),

              // Dropdown
              const Text("Select a category"),
              const SizedBox(height: 6),
              DropdownButtonFormField<String>(
                value: _selectedCategory,
                hint: const Text("Choose a category"),
                decoration: const InputDecoration(),
                items: const [
                  DropdownMenuItem(value: 'Bug Report', child: Text('Bug Report')),
                  DropdownMenuItem(value: 'Feature Request', child: Text('Feature Request')),
                  DropdownMenuItem(value: 'General Feedback', child: Text('General Feedback')),
                ],
                onChanged: (value) {
                  setState(() {
                    _selectedCategory = value;
                  });
                },
                validator: (value) =>
                    value == null ? 'Please select a category' : null,
              ),
              const SizedBox(height: 24),

              // Checkboxes
              const Text(
                "What features did you like?",
                style: TextStyle(fontWeight: FontWeight.bold),
              ),
              const SizedBox(height: 10),
              ..._features.keys.map((feature) {
                return CheckboxListTile(
                  title: Text(feature),
                  value: _features[feature],
                  onChanged: (val) {
                    setState(() {
                      _features[feature] = val!;
                    });
                  },
                  controlAffinity: ListTileControlAffinity.leading,
                  contentPadding: EdgeInsets.zero,
                );
              }).toList(),

              // Terms & Conditions
              CheckboxListTile(
                title: const Text('I agree to the terms and conditions'),
                value: _agreeToTerms,
                onChanged: (val) {
                  setState(() {
                    _agreeToTerms = val!;
                  });
                },
                controlAffinity: ListTileControlAffinity.leading,
                contentPadding: EdgeInsets.zero,
              ),
              const SizedBox(height: 16),

              // Submit Button
              SizedBox(
                width: double.infinity,
                child: ElevatedButton(
                  onPressed: _submitForm,
                  style: ElevatedButton.styleFrom(
                    padding: const EdgeInsets.symmetric(vertical: 16),
                    shape: RoundedRectangleBorder(
                      borderRadius: BorderRadius.circular(10),
                    ),
                    backgroundColor: Colors.blue,
                  ),
                  child: const Text(
                    "Submit",
                    style: TextStyle(fontSize: 16),
                  ),
                ),
              ),
            ],
          ),
        ),
      ),
    );
  }
}
